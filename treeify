#!/usr/bin/python

import sys

delimiter = '/'


def add_path(to, segments):
    if not segments:
        return
    head = segments[0]
    tail = segments[1:]
    if head not in to:
        to[head] = {}
    add_path(to[head], tail)


def print_nice(node, indent=0):
    if indent:
        indent_str = '%s%s' % (' ' * (indent - 1), delimiter)
    else:
        indent_str = ''
    for sub in sorted(node.keys()):
        if not sub:
            continue
        line = '%s%s' % (indent_str, sub)
        if node[sub]:
            line = '%s%s' % (line, delimiter)
        print line
        print_nice(node[sub], len(line))


def compact(node, name=''):
    result = {}
    for sub_key, sub_node in node.iteritems():
        sub_node = compact(sub_node)
        if len(sub_node) == 1:
            subsub_key = sub_node.keys()[0]
            subsub_node = sub_node[subsub_key]
            sub_key = '%s%s%s' % (sub_key, delimiter, subsub_key)
            sub_node = subsub_node
        result[sub_key] = sub_node
    return result


root_dir = {}

for line in sys.stdin:
    line = line[:-1]
    segments = line.split(delimiter)
    segments = filter(lambda s: s, segments)  # "foo//bar" -> "foo/bar"
    add_path(root_dir, segments)

root_dir = compact(root_dir)
print_nice(root_dir)
