#!/usr/bin/python

import signal
import socket
import sys
import time

if len(sys.argv) not in (2, 3):
    import os
    sys.stderr.write('''Usage: %s [<host>] <port>

Sends each line from stdin as one packet to the host and port. If only the port
is specified, the host defaults to localhost.
''' % os.path.basename(sys.argv[0]))
    sys.exit(1)

if len(sys.argv) == 2:
    host = 'localhost'
    port = int(sys.argv[1])
elif len(sys.argv) == 3:
    host = sys.argv[1]
    port = int(sys.argv[2])

# trap sigint so that we don't get an ugly stack trace
signal.signal(signal.SIGINT, lambda sig, frame: sys.exit(1))

# "Adapted" from https://wiki.python.org/moin/UdpCommunication

sock = socket.socket(socket.AF_INET,     # Internet
                     socket.SOCK_DGRAM)  # UDP

for line in sys.stdin.readlines():
    if line.endswith('\n'):
        line = line[:-1]
    sock.sendto(line, (host, port))
    time.sleep(0.001)
